{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krasi\\\\OneDrive - McGill University\\\\Desktop\\\\PDF Summarizer\\\\PDF Summarizer\\\\frontend\\\\src\\\\screens\\\\Stream.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stream() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [result, setResult] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const [jresult, setJresult] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputValue) {\n      setError('Please enter a prompt!');\n      setPrompt('');\n      setResult('');\n      setJresult('');\n      return;\n    }\n    try {\n      //Creates a new instance of AbortController\n      //This controller will be used to cancel our request when needed\n      const controller = new AbortController();\n      //It will allow us to communicate and control the request cancellation\n      const signal = controller.signal; //Get the siganl from the controller\n      const response = await fetch('/api/chatgpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: inputValue\n        }),\n        signal: signal //pass the abort signal\n      });\n\n      if (response.ok) {\n        //read the response incrementally\n        const reader = response.body.getReader();\n        let resultData = '';\n        let jresultData = [];\n        setPrompt(inputValue);\n        setResult(resultData);\n        setInputValue('');\n        setError('');\n        let readerDone = false;\n        while (!readerDone) {\n          //The value property represents the data read from the stream.\n          //The done property indicates whether the reader has reached the end of the stream.\n          //It is set to false initially, when we reach the end of the stream it is set to true.\n          //reader.read(); //value,done {value: , done: , other parameters}\n          const {\n            value,\n            done\n          } = await reader.read();\n          if (done) {\n            readerDone = true;\n          } else {\n            let chunk = new TextDecoder('utf-8').decode(value);\n            chunk = chunk.replaceAll('{\"event\": \"done\"}', '').replaceAll('data: [DONE]', '').replace(/\\}\\s*data:\\s*\\{/g, '}{').replaceAll('}{', '},{');\n            chunk = `[${chunk}]`;\n            console.log(chunk);\n            chunk = JSON.parse(chunk);\n            console.log(chunk);\n\n            //Add text to result\n            let text = '';\n            for (let i = 0; i < chunk.length; i++) {\n              const choices = chunk[i].choices;\n              if (choices && choices.length > 0) {\n                text += choices[0].text;\n              }\n            }\n            resultData += text;\n            setResult(prevResult => (prevResult + text).replaceAll('\\n\\n', '\\n'));\n\n            //display the chunk array\n            jresultData.push(chunk);\n            setJresult(JSON.stringify(jresultData, null, 2));\n          }\n        }\n      } else {\n        throw new Error('An error occurred');\n      }\n    } catch (error) {\n      console.log(error);\n      setResult('');\n      setError('An error occurred while submitting the form.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-horizontal\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-10 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control custom-input\",\n              id: \"floatingInput\",\n              placeholder: \"Enter a value\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"floatingInput\",\n              children: \"Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-2 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary custom-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }, this), prompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary mt-3\",\n      children: prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 24\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success mt-3\",\n      style: {\n        whiteSpace: 'pre-line'\n      },\n      dangerouslySetInnerHTML: {\n        __html: result\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 24\n    }, this), result && /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"alert alert-info mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: jresult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(Stream, \"xE6hXGcRM4KGXDw8t0bVWeMsu9Y=\");\n_c = Stream;\nexport default Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Stream","_s","inputValue","setInputValue","result","setResult","prompt","setPrompt","jresult","setJresult","error","setError","handleSubmit","e","preventDefault","controller","AbortController","signal","response","fetch","method","headers","body","JSON","stringify","text","ok","reader","getReader","resultData","jresultData","readerDone","value","done","read","chunk","TextDecoder","decode","replaceAll","replace","console","log","parse","i","length","choices","prevResult","push","Error","className","children","onSubmit","id","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","style","whiteSpace","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/krasi/OneDrive - McGill University/Desktop/PDF Summarizer/PDF Summarizer/frontend/src/screens/Stream.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './style/style.css';\n\nfunction Stream() {\n    const [inputValue, setInputValue] = useState('');\n    const [result, setResult] = useState('');\n    const [prompt, setPrompt] = useState('');\n    const [jresult, setJresult] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!inputValue) {\n            setError('Please enter a prompt!');\n            setPrompt('');\n            setResult('');\n            setJresult('');\n            return;\n        }\n\n\n        try {\n            //Creates a new instance of AbortController\n            //This controller will be used to cancel our request when needed\n            const controller = new AbortController();\n            //It will allow us to communicate and control the request cancellation\n            const signal = controller.signal; //Get the siganl from the controller\n            const response = await fetch('/api/chatgpt', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ text: inputValue }),\n                signal: signal, //pass the abort signal\n            });\n            if (response.ok) {\n                //read the response incrementally\n                const reader = response.body.getReader();\n                let resultData = '';\n                let jresultData = [];\n                setPrompt(inputValue);\n                setResult(resultData);\n                setInputValue('');\n                setError('');\n\n                let readerDone = false;\n                while (!readerDone) {\n                    //The value property represents the data read from the stream.\n                    //The done property indicates whether the reader has reached the end of the stream.\n                    //It is set to false initially, when we reach the end of the stream it is set to true.\n                    //reader.read(); //value,done {value: , done: , other parameters}\n                    const { value, done } = await reader.read();\n\n                    if(done){\n                        readerDone = true;\n                    }else{\n                        let chunk = new TextDecoder('utf-8').decode(value);\n                        chunk = chunk\n                        .replaceAll('{\"event\": \"done\"}', '')\n                        .replaceAll('data: [DONE]', '')\n                        .replace(/\\}\\s*data:\\s*\\{/g, '}{')\n                        .replaceAll('}{','},{');\n                        chunk = `[${chunk}]`;\n                        console.log(chunk);\n                        chunk = JSON.parse(chunk);\n                        console.log(chunk);\n\n                        //Add text to result\n                        let text = '';\n                        for(let i = 0; i < chunk.length; i++){\n                            const choices = chunk[i].choices;\n                            if(choices && choices.length > 0){\n                                text += choices[0].text;\n                            }\n                        }\n                        resultData += text;\n                        setResult((prevResult) => (prevResult + text).replaceAll('\\n\\n','\\n'));\n                        \n                        //display the chunk array\n                        jresultData.push(chunk);\n                        setJresult(JSON.stringify(jresultData, null, 2));\n                    }\n                }\n            } else {\n                throw new Error('An error occurred');\n            }\n        } catch (error) {\n            console.log(error);\n            setResult('');\n            setError('An error occurred while submitting the form.');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <form className=\"form-horizontal\" onSubmit={handleSubmit}>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-10 mt-2\">\n                        <div className=\"form-floating\">\n                            <textarea\n                                className=\"form-control custom-input\"\n                                id=\"floatingInput\"\n                                placeholder=\"Enter a value\"\n                                value={inputValue}\n                                onChange={(e) => setInputValue(e.target.value)}\n                            />\n\n                            <label htmlFor=\"floatingInput\">Input</label>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2 mt-2\">\n                        <button type=\"submit\" className=\"btn btn-primary custom-button\">Submit</button>\n                    </div>\n                </div>\n            </form>\n            {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n            {prompt && <div className=\"alert alert-secondary mt-3\">{prompt}</div>}\n            {result && <div className=\"alert alert-success mt-3\" style={{ whiteSpace: 'pre-line' }} dangerouslySetInnerHTML={{__html: result}}></div>}\n            {result && (\n                <pre className=\"alert alert-info mt-3\">\n                    <code>{jresult}</code>\n                </pre>\n            )}\n        </div>\n    );\n}\n\nexport default Stream;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}